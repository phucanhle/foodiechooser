"use client";
import { useState, useEffect } from "react";
// import { FaStar } from "react-icons/fa"; // Import icon sao ƒë√°nh gi√°

export default function Fomula() {
    const fakedatafood = {
        recipeID: "8",
        imageSrc: "https://garlicsaltandlime.com/wp-content/uploads/2022/07/Garden-salad-thumbnail.jpg",
        imageDes: "A fresh garden salad with various vegetables",
        foodName: "Garden Salad",
        foodDes: "A mix of fresh lettuce, cucumbers, tomatoes, and carrots with a light vinaigrette.",
        prepTime: "15 ph√∫t", // Th·ªùi gian chu·∫©n b·ªã
        calories: 120, // L∆∞·ª£ng calo
        servings: 2, // S·ªë ph·∫ßn ƒÉn
        rating: 4.5, // ƒê√°nh gi√° trung b√¨nh (tr√™n 5)
        ingredients: [
            "200g x√† l√°ch",
            "1 qu·∫£ d∆∞a leo",
            "1 qu·∫£ c√† chua",
            "1 c·ªß c√† r·ªët",
            "2 th√¨a d·∫ßu oliu",
            "1 th√¨a gi·∫•m balsamic",
            "Mu·ªëi, ti√™u v·ª´a ƒë·ªß",
        ],
        instructions: [
            "R·ª≠a s·∫°ch rau c·ªß, ƒë·ªÉ r√°o n∆∞·ªõc.",
            "C·∫Øt d∆∞a leo, c√† chua, c√† r·ªët th√†nh l√°t m·ªèng.",
            "Tr·ªôn c√°c nguy√™n li·ªáu v√†o t√¥ l·ªõn.",
            "Th√™m d·∫ßu oliu, gi·∫•m balsamic, mu·ªëi v√† ti√™u.",
            "Tr·ªôn ƒë·ªÅu v√† th∆∞·ªüng th·ª©c ngay.",
        ],
    };

    const [isLoaded, setIsLoaded] = useState(false);

    useEffect(() => {
        // Gi·∫£ l·∫≠p delay load ·∫£nh ƒë·ªÉ hi·ªáu ·ª©ng ƒë·∫πp h∆°n
        const timer = setTimeout(() => {
            setIsLoaded(true);
        }, 1000);

        return () => clearTimeout(timer);
    }, []);

    return (
        <div className="relative w-screen max-w-[1080px] min-h-screen flex flex-col gap-6 py-40 px-4 mx-auto">
            {/* Layout ch√≠nh */}
            <div className="flex gap-6 flex-wrap md:flex-nowrap">
                {/* H√¨nh ·∫£nh */}
                <div className="w-full max-w-[450px] min-h-[300px] border rounded-2xl p-4 relative">
                    {!isLoaded && <div className="absolute inset-0 bg-gray-200 animate-pulse rounded-2xl"></div>}
                    <img
                        src={fakedatafood.imageSrc}
                        alt={fakedatafood.imageDes}
                        className={`w-full h-full object-cover rounded-2xl transition-opacity duration-500 ${
                            isLoaded ? "opacity-100" : "opacity-0"
                        }`}
                        onLoad={() => setIsLoaded(true)}
                        onError={() => setIsLoaded(true)}
                    />
                </div>

                {/* Th√¥ng tin m√≥n ƒÉn */}
                <div className="w-full min-h-[300px] border rounded-2xl p-4">
                    <h1 className="text-2xl font-bold text-gray-800">{fakedatafood.foodName}</h1>
                    <p className="text-gray-600 mt-2">{fakedatafood.foodDes}</p>

                    {/* Th√¥ng tin dinh d∆∞·ª°ng v√† th·ªùi gian ch·∫ø bi·∫øn */}
                    <div className="mt-4 flex flex-wrap gap-4 text-gray-700">
                        <p>
                            ‚è≥ <strong>Th·ªùi gian chu·∫©n b·ªã:</strong> {fakedatafood.prepTime}
                        </p>
                        <p>
                            üî• <strong>L∆∞·ª£ng calo:</strong> {fakedatafood.calories} kcal
                        </p>
                        <p>
                            üçΩÔ∏è <strong>Kh·∫©u ph·∫ßn:</strong> {fakedatafood.servings} ng∆∞·ªùi
                        </p>
                    </div>
                </div>
            </div>

            {/* Th√†nh ph·∫ßn nguy√™n li·ªáu */}
            <div className="w-full min-h-[200px] border rounded-2xl p-4">
                <h2 className="text-xl font-semibold text-gray-800">Th√†nh ph·∫ßn</h2>
                <ul className="list-disc list-inside text-gray-700 mt-2">
                    {fakedatafood.ingredients.map((item, index) => (
                        <li key={index}>{item}</li>
                    ))}
                </ul>
            </div>

            {/* H∆∞·ªõng d·∫´n ch·∫ø bi·∫øn */}
            <div className="w-full min-h-[200px] border rounded-2xl p-4">
                <h2 className="text-xl font-semibold text-gray-800">üë®‚Äçüç≥ H∆∞·ªõng d·∫´n ch·∫ø bi·∫øn</h2>
                <ol className="list-decimal list-inside text-gray-700 mt-2">
                    {fakedatafood.instructions.map((step, index) => (
                        <li key={index}>{step}</li>
                    ))}
                </ol>
            </div>
        </div>
    );
}
